#!/bin/sh
#
# find-function utility
# Copyright (c) 2011 Steve Grubb. ALL RIGHTS RESERVED.
# sgrubb@redhat.com
#
# This software may be freely redistributed under the terms of the GNU
# public license.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
# This program looks for apps that use or provide a function:
#
# ./find-function [--uses|--provides|--lib] function-name
#

if [ -h /bin ] ; then
	libdirs="/usr/lib /usr/lib64"
	progdirs=""
#	progdirs="/usr/bin /usr/sbin /usr/libexec"
else
	libdirs="/lib /lib64 /usr/lib /usr/lib64"
#	progdirs="/bin /sbin /usr/bin /usr/sbin /usr/libexec"
fi
FOUND=0
if [ "$1" = "--provides" ] ; then
	MODE="provides"
	shift
else
	MODE="uses"
fi
if [ "$1" = "--lib" ] ; then
	FUNCTION="$2"
	shift
else
	FUNCTION="$1@.*GLIBC*"
fi

# First param is which list to use, second is search pattern
scan () {
if [ "$1" = "1" ] ; then
	dirs=$libdirs
elif [ "$1" = "2" ] ; then
	dirs=$progdirs
elif [ "$1" = "3" ] ; then
	dirs=$3
fi

for d in $dirs ; do
	if [ ! -d $d ] ; then
		continue
	fi
	files=`/usr/bin/find $d -name "$2" -type f 2>/dev/null`
	for f in $files
	do
		if [ "$MODE" = "uses" ] ; then
			syms=`/usr/bin/readelf -sW $f 2>/dev/null | awk '$4 == "FUNC" && $7 == "UND" { print $8 }' | grep "$FUNCTION"`
		else
			syms=`/usr/bin/readelf -sW $f 2>/dev/null | awk '$4 == "FUNC" && $7 != "UND" { print $8 }' | grep "$FUNCTION"`
		fi

		if [ x"$syms" != "x" ] ; then
			FOUND=1
			printf "%-42s\t" $f
			rpm -qf --queryformat "%{NAME}-%{VERSION}" $f
			echo
		fi
	done
done
}

scan 1 '*.so'
scan 2 '*'

if [ $FOUND -eq 0 ] ; then
        # Nothing to report, just exit
        echo "No function found" 1>&2
        exit 0
fi
exit 1

